{"version":3,"file":"main.js","mappings":"mBAAO,MAAMA,EACTC,aAAY,IACRC,EAAG,KAAEC,EAAI,QAAEC,IAEXC,KAAKH,IAAMA,EACXG,KAAKF,KAAOA,EACZE,KAAKC,SAAWC,SAASC,cAAc,UACvCH,KAAKC,SAASG,UAAY,gBAC1BJ,KAAKC,SAASI,YAAcP,EAE5B,IAAIQ,EAAQN,KACZA,KAAKC,SAASM,QAAU,KACpBR,EAAQO,EAAM,CAEtB,CAEAE,OAAOC,GACHA,EAAQC,YAAYV,KAAKC,SAC7B,CAEAU,QAAQC,GACK,GAATA,EACIZ,KAAKC,SAASY,aAAa,YAAY,GACvCb,KAAKC,SAASa,gBAAgB,WACtC,ECxBG,MAAMC,EACTnB,YAAYoB,GACRhB,KAAKiB,QAAU,IAAKD,GACpBhB,KAAKkB,MAAQ,EACblB,KAAKmB,KAAOH,EAAMI,MACtB,CAEAC,OACI,YAA+BC,IAAvBtB,KAAKiB,QAAQE,MAAuB,EAAKnB,KAAKmB,KAAOnB,KAAKkB,MAAQ,CAC9E,CAEAK,IAAIX,GACgB,IAAhBZ,KAAKqB,OAAerB,KAAKiB,QAAQ,GAAOL,EAAQZ,KAAKiB,UAAUjB,KAAKmB,MAAQP,CAChF,CAEAY,UACI,IAAIC,EAGJ,OAFAA,EAAOzB,KAAKiB,QAAQjB,KAAKkB,cAClBlB,KAAKiB,QAAQjB,KAAKkB,OACrBlB,KAAKkB,QAAUlB,KAAKmB,MACpBnB,KAAKkB,QACEO,IAEXzB,KAAKkB,MAAQ,EACblB,KAAKmB,KAAO,EACLM,EACX,CAEAC,SACI,OAAOC,OAAOC,OAAO5B,KAAKiB,QAC9B,CAEAY,QAAQC,GACJ,IAAIjC,EAAM8B,OAAOI,KAAK/B,KAAKiB,SAASe,MAAKnC,GAAOG,KAAKiB,QAAQpB,KAASiC,IACtE,OAAO9B,KAAKiB,UAAUpB,EAAM,EAChC,ECjCJ,ICCe,UAAa,QAAEY,IAS1B,SAASwB,EAAKH,GACV,IAAII,EAAOlB,EAAMa,QAAQC,GACtBA,IAASK,EACRC,MAAM,SACCF,IAASC,EAChBC,MAAM,QAENA,MAAM,SAGVC,cAAcC,GAEdC,EAASzB,gBAAgB,YACzBE,EAAMU,SAASc,SAAQ,SAAUV,GAC7BA,EAAKnB,SAAQ,EACjB,GACJ,CAxBAX,KAAKyC,MAAQ,CAEb,EAEAzC,KAAK0C,SAAYC,IAAD,EAsBhB,MAAM3B,EAAQ,IAAID,EAAM,CACpB,IAAIpB,EAAc,CACdE,IAAK,WACLC,KAAM,KACNC,QAASkC,IAEb,IAAItC,EAAc,CACdE,IAAK,OACLC,KAAM,KACNC,QAASkC,IAEb,IAAItC,EAAc,CACdE,IAAK,QACLC,KAAM,IACNC,QAASkC,MAIjB,IAAIK,EACAC,EAAWrC,SAAS0C,eAAe,YACnCT,EAAsBnB,EAAMU,SAAS,GACrCmB,EAAe3C,SAAS0C,eAAe,gBAEvCE,EAAgB5C,SAAS0C,eAAe,iBAC5C5B,EAAMU,SAASc,SAAQV,IACnBA,EAAKtB,OAAOsC,GACZhB,EAAKnB,SAAQ,EAAK,IAGtB4B,EAAShC,QAAU,KACfgC,EAAS1B,aAAa,YAAY,GAClCG,EAAMU,SAASc,SAAQV,GAAQA,EAAKnB,SAAQ,KAE5C2B,EAA0BS,aAAY,KAClCZ,EAAsBnB,EAAMa,QAAQM,GACpCU,EAAaxC,YAAc8B,EAAoBrC,IAAI,GACpD,IAAI,CAEf,CDlEA,CAAS,CAAEW,QAASP,SAAS8C,cAAc,S","sources":["webpack:///./src/PickingButton.js","webpack:///./src/Queue.js","webpack:///./src/index.js","webpack:///./src/App.js"],"sourcesContent":["export class PickingButton {\r\n    constructor({\r\n        key, name, onClick\r\n    }) {\r\n        this.key = key;\r\n        this.name = name;\r\n        this.$element = document.createElement('button');\r\n        this.$element.className = 'PickingButton';\r\n        this.$element.textContent = name;\r\n\r\n        var _self = this;\r\n        this.$element.onclick = () => {\r\n            onClick(_self);\r\n        }\r\n    }\r\n\r\n    render($target) {\r\n        $target.appendChild(this.$element);\r\n    }\r\n\r\n    disable(value) {\r\n        value == true ?\r\n            this.$element.setAttribute('disabled', true) :\r\n            this.$element.removeAttribute('disabled');\r\n    }\r\n}\r\n\r\n\r\n","export class Queue {\r\n    constructor(items) {\r\n        this.storage = { ...items };\r\n        this.front = 0;\r\n        this.rear = items.length;\r\n    }\r\n    \r\n    size() {\r\n        return (this.storage[rear] === undefined) ? 0 : (this.rear - this.front + 1);\r\n    }\r\n\r\n    add(value) {\r\n        this.size() === 0 ? this.storage['0'] = value : this.storage[++this.rear] = value;\r\n    }\r\n\r\n    popleft() {\r\n        let temp;\r\n        temp = this.storage[this.front];\r\n        delete this.storage[this.front];\r\n        if (this.front !== this.rear) {\r\n            this.front++;\r\n            return temp;\r\n        }\r\n        this.front = 0;\r\n        this.rear = 0;\r\n        return temp;\r\n    }\r\n\r\n    getAll() {\r\n        return Object.values(this.storage);\r\n    }\r\n\r\n    getNext(item) {\r\n        let key = Object.keys(this.storage).find(key => this.storage[key] === item);\r\n        return this.storage[++key % 3];\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import App from './App.js';\r\n\r\nnew App ({ $target: document.querySelector('.App')});","import { PickingButton } from \"./PickingButton.js\";\r\nimport { Queue } from \"./Queue.js\";\r\n\r\nexport default function App({ $target }) {\r\n    this.state = {\r\n        //\r\n    }\r\n\r\n    this.setState = (nextState) => {\r\n        //\r\n    }\r\n\r\n    function game(item) {\r\n        let next = items.getNext(item);\r\n        if(item === computerCurrentItem) {\r\n            alert(\"비겼습니다\");\r\n        } else if (next === computerCurrentItem) {\r\n            alert(\"졌습니다\");\r\n        } else {\r\n            alert(\"이겼습니다\");\r\n        }\r\n\r\n        clearInterval(timerRandomComputerData);\r\n        \r\n        btnStart.removeAttribute('disabled');\r\n        items.getAll().forEach(function (item) {\r\n            item.disable(true);\r\n        });\r\n    }\r\n\r\n    const items = new Queue([\r\n        new PickingButton({\r\n            key: 'scissors',\r\n            name: \"가위\",\r\n            onClick: game\r\n        }),\r\n        new PickingButton({\r\n            key: 'rock',\r\n            name: \"바위\",\r\n            onClick: game\r\n        }),\r\n        new PickingButton({\r\n            key: 'paper',\r\n            name: \"보\",\r\n            onClick: game\r\n        })\r\n    ]);\r\n\r\n    let timerRandomComputerData;\r\n    let btnStart = document.getElementById(\"btnStart\");\r\n    let computerCurrentItem = items.getAll()[0];\r\n    let computerData = document.getElementById(\"computerData\");\r\n    \r\n    let divPickingBtn = document.getElementById(\"divPickingBtn\");\r\n    items.getAll().forEach(item => {\r\n        item.render(divPickingBtn);\r\n        item.disable(true);\r\n    });\r\n\r\n    btnStart.onclick = () => {\r\n        btnStart.setAttribute('disabled', true);\r\n        items.getAll().forEach(item => item.disable(false));\r\n\r\n        timerRandomComputerData = setInterval(() => {\r\n            computerCurrentItem = items.getNext(computerCurrentItem);\r\n            computerData.textContent = computerCurrentItem.name;\r\n        }, 100);\r\n    }\r\n}"],"names":["PickingButton","constructor","key","name","onClick","this","$element","document","createElement","className","textContent","_self","onclick","render","$target","appendChild","disable","value","setAttribute","removeAttribute","Queue","items","storage","front","rear","length","size","undefined","add","popleft","temp","getAll","Object","values","getNext","item","keys","find","game","next","computerCurrentItem","alert","clearInterval","timerRandomComputerData","btnStart","forEach","state","setState","nextState","getElementById","computerData","divPickingBtn","setInterval","querySelector"],"sourceRoot":""}