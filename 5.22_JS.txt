- 실행컨텍스트
- this 객체 / this 바인딩
- apply / bind / call

EFA팀 강인한 책임님
프론트엔드 기본을 알려드리고싶다

[3.0 자바스크립트 심화](https://cat-antlion-144.notion.site/3-0-fac7fde71cc44fe7bf7c389e9db330c1)


================================<< 컴퓨터의 동작 원리 >>================================

[중앙제어장치, CPU]

먼 옛날, 서로 멀리 떨어진 두 사람이 말을 주고받을 때?
1. 걸어서
2. 말 등 교통수단으로
3. 봉화, 비둘기
4. 전신(!) - 모스 부호 등 => 전기를 사용해서 빠르다!

전기의 속도는 이론적으로 빛의 속도: 30만 km/s
on/off로 정보를 전달 (0과 1)

소통? 봉화든, 음성 언어든,
상태의 변화를 감지하여서 의미를 만들어내는 것
=> 의미를 담는 약속이 필요 (모스 부호 등)


[스위치]---------[펌프]---------[스피커]
전기를 멀리 보내려면 중간 펌프(릴레이)가 필요
릴레이: 계페 제어, 보통 리피터 역할

전선을 금속에 뱅글뱅글 감아서 전자석을 만듦
전원을 공급하게 되면 릴레이 내부의 전자석이 철편을 끌어당겨 스위치가 on되는것

[릴레이의 원리](https://m.blog.naver.com/roboholic84/220460268471)


논리 (명제)
AND, OR, XOR, ... => 이것들을 릴레이로 구현할 수 있음!

덧셈계산기(가산기)
현존하는 가장 좋은 계산기 => CPU(ALU) => 실제로 덧셈밖에 못함
하나의 CPU 안에 천억개의 릴레이(진공관 => 트랜지스터 => 반도체)



[기억장치]

플립플롭: 회로 안에 전기(전자)를 가두는 것
플립플롭 하나의 장치로 전기가 있다(1), 없다(0)의 1bit를 표현할 수 있음

1bit, 1byte, 1KB     , 1MB   , 1GB   , 1TB   , 1PB
      8bit , 1000byte, 1000KB, 1000MB, 1000GB, 1000TB
2^1,  2^8    2^8*2^10(2^18)
2가지 256가지의 다른 정보


[RAM과 ROM의 차이](https://information-factory.tistory.com/270)

메모리
- RAM: 전원이 차단되면 데이터가 사라짐
- ROM: 전원이 차단되어도 데이터가 사라지지 않음, BIOS 등 저장

보조기억장치: Windows 등 운영체제 저장
- 하드디스크
- SSD


더 진화된 덧셈계산기
=> 인버터 활용
=> 인버터? 릴레이를 좀만 더 진화

인버터(릴레이의 반대)
전자석이 만들어지면 철편이 내려오면서 스위치 연결이 끊어짐
전자석이 안만들어지면 철편이 올라가면서 스위치 연결이 되어있음
인버터의 in, out을 연결시키면 자동으로 스위치가 연결되었다, 끊어졌다를 만들 수 있음



[Program Counter(PC)]
입력된 명령은 메모리에 저장됨
PC: 저장된 명령을 순차적으로 실행시키게 하기 위한 장치



[CPU가 한번에 받아들일 수 있는 명령어 사이즈]
한번 메모리의
빌드: 실행 파일을 만들어 내는 행위



[CPU 클럭]
3.2GHz
G(10^9)
초당 3.2*10^9(32억)번 0,1이 반복됨
초당 32억개의 명령어 처리 가능



[프로그램]
메모리에 들어가는 명령어의 집합

기계어
   ↑ 번역(컴파일)
고수준 프로그래밍 언어



Nand To Tetris(회로 시뮬레이터)



[모듈](https://cat-antlion-144.notion.site/7ff5759f2fd648bc9ca6c8595dfd6a0a)
















